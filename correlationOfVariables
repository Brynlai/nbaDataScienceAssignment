# Set working directory first !!
setwd("C:/Users/wbrya/OneDrive/Documents/nbaData/large/csv") # Change to your working directory.
getwd()

# Load libraries
library(readr)
library(dplyr)
library(janitor)
library(ggplot2)

# Read data from CSV
data <- read_csv("game.csv")
print(colnames(data))
data <- data %>%
  filter(game_date >= as.Date("1983-12-31") & game_date <= as.Date("2023-06-13"))

data <- data %>%
  filter(fg3a_home >= 2 & fg3a_away >= 2)

# Remove rows with missing values
data <- data %>%
  filter(!is.na(fg3_pct_home) & !is.na(fg3_pct_away))

# Remove rows where fg3_pct_home or fg3_pct_away equals 1 or 0
data <- data %>%
  filter(fg3_pct_home != 1 & fg3_pct_home != 0 &
           fg3_pct_away != 1 & fg3_pct_away != 0)


# Summary of fga_home column

# Add the winning column based on the condition
data <- data %>%
  mutate(home_won = pts_home > pts_away)
# Add the winning column based on the condition
data <- data %>%
  mutate(away_won = pts_away > pts_home)

# Select only numeric columns for correlation analysis
numeric_data <- data[, sapply(data, is.numeric)]

# Exclude specific columns from the numeric data
exclude_columns <- c("season_id", "team_id_home", "team_abbreviation_home", "team_name_home",
                     "game_id", "game_date", "matchup_home", "wl_home", "video_available_home",
                     "team_id_away", "team_abbreviation_away", "team_name_away", "matchup_away",
                     "wl_away", "video_available_away", "season_type")

numeric_data <- numeric_data[, !(colnames(numeric_data) %in% exclude_columns)]

# Calculate the correlation between home_won and other numeric variables
correlation_with_home_won <- sapply(numeric_data, function(x) cor(x, data$home_won, use = "complete.obs"))

# Calculate the correlation between away_won and other numeric variables
correlation_with_away_won <- sapply(numeric_data, function(x) cor(x, data$away_won, use = "complete.obs"))

# Combine the correlation results into a data frame
correlation_data <- data.frame(
  variable = names(correlation_with_home_won),
  home_win_correlation = correlation_with_home_won,
  away_win_correlation = correlation_with_away_won
)

# Melt the data for plotting
correlation_data <- tidyr::pivot_longer(correlation_data, cols = c(home_win_correlation, away_win_correlation),
                                        names_to = "outcome", values_to = "correlation")

# Plot
ggplot(correlation_data, aes(x = reorder(variable, correlation), y = correlation, fill = outcome)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Correlation between Variables and Game Outcomes",
       x = "Variable", y = "Correlation") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

print(colnames(data))
